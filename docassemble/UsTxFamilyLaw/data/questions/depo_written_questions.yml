metadata:
  title: Request for Documents to Non-Party
  short title: Non-Party Doc Request
  tab title: Non-Party Docs
  tags:
    - 002:DISCOVERY
  required privileges:
    - user
  require login: True
  authors:
    - name: Thomas J. Daley, JD
      organization: JDBOT.US, LLC
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.UsTxFamilyLaw:inquire_case.yml
  - docassemble.UsTxFamilyLaw:inquire_subpoena.yml
---
modules:
  - docassemble.demo.accordion
  - docassemble.UsTxFamilyLaw.dastripe
---
# Turn off document caching so user can edit a few
# fields and regenerate a new subpoena.
features:
  cache documents: False
  javascript: https://js.stripe.com/v3
---
objects:
  - payment: DAStripe.using(payor=payor, currency='USD')
  - payor: ALIndividual
  - payor.billing_address: ALAddress
---
mandatory: True
code: |
  list_price = 149.99
  payment.amount = list_price
  payment.amount = payment.discounted_price()
  subpoena.subpoena_type
  case_is_loaded
  case.id
  case.attorney.name.first
  case.petitioner.ssn_last4
  case.respondent.ssn_last4
  case.client
  case.oc.name.first
  op_set
  case_style_set
  case_saved
  subpoena.document_subject
  subpoena.witness.name.first
  subpoena.bank_flag
  subpoena.notice_date
  subpoena.issue_date
  subpoena.documents[0].description
  review_documents
  subpoena.paralegal.name.first
  subpoena.secure_link
  subpoena_description_set
  if payment.amount > .25:
    if not payment.paid:
      payor.name.first
      payment_screen
---
id: payor information
sets:
  - payor.name
  - payor.billing_address
  - payor.email
  - payor.phone_number
question: |
  Payor Details
fields:
  - code: |
      payor.name_fields() + payor.billing_address.address_fields()
  - Email: payor.email
    datatype: email
  - Telephone: payor.telephone
---
event: payment.demand
question: |
  Payment
subquestion: |
  %if payment.amount < list_price:
  You will be charged $ ${'{0:.2f}'.format(payment.amount)} (discounted from $ ${'{0:.2f}'.format(list_price)}).
  %else:
  You will be charged ${payment.amount}.
  %endif
  
  ${payment.html}
script: |
  ${payment.javascript}
---
event: payment.success
code: |
  payment.process()
---
id: set subpoena description
event: build_attachment_list
sets:
  - subpoena_description
  - subpoena_description_set
  - attachment_list
code: |
  if subpoena.subpoena_type == 'dwq':
    subpoena_description = "Subpoena for Deposition on Written Questions"
    attachment_list = [all_cover_letter, dwq_notice, all_bra, dwq_subpoena, dwq_deposition]
  else:
    subpoena_description = "Subpoena Duces Tecum"
    attachment_list = [all_cover_letter, sdt_notice, all_bra, sdt_subpoena]
  subpoena_description_set = True
---
event: continue_subpoena
id: generate subpoena
needs: parties.table
mandatory: True
question: |
  <i class="fa-solid fa-face-smile" style="color: #B197FC;"></i> Your ${subpoena_description} is Ready
subquestion: |
  You will need each of the following documents. Gathering documents from non-parties requires these steps:
  
  1. Email these documents to yourself and save them to the client's file.
  
  1. Mail and e-serve the cover letter and notice.
  
  1. Next, serve and e-serve the subponea on ${subpoena.issue_date}.
  
  1. Finally, on ${subpoena.due_date}, contact ${subpoena.witness.name_full()} (not their registered agent) to arrange to collect the documents along with an executed business records affidavit.
action buttons:
  - label: Revise
    action: review_screen
    color: success
    icon: pencil
attachment code: |
  attachment_list
---
attachment:
  name: Cover Letter
  filename: ${subpoena.witness.name_full()} - Cover Letter
  description: Cover Letter
  variable name: all_cover_letter
  docx template file: docassemble.UsTxFamilyLaw:dwq_notice_cover_letter.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Notice of Pending Subpoena Duces Tecum
  filename: ${subpoena.witness.name_full()} - Notice
  description: Notice of Pending Subpoena Duces Tecum
  variable name: sdt_notice
  docx template file: docassemble.UsTxFamilyLaw:dwq_notice_of_sdt.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Notice of Pending Deposition on Written Questions
  filename: ${subpoena.witness.name_full()} - Notice
  description: Notice of Pending Deposition on Written Questions
  variable name: dwq_notice
  docx template file: docassemble.UsTxFamilyLaw:dwq_notice_of_dwq.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Business Records Affidavit
  filename: ${subpoena.witness.name_full()} - BRA
  description: Business Records Affidavit
  variable name: all_bra
  docx template file: docassemble.UsTxFamilyLaw:dwq_business_records_affidavit.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Subpoena Duces Tecum
  filename: ${subpoena.witness.name_full()} - Subpoea Duces Tecum
  description: Subpoena Duces Tecum
  variable name: sdt_subpoena
  docx template file: docassemble.UsTxFamilyLaw:dwq_subpoena_duces_tecum.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Subpoena for Deposition on Written Questions
  filename: ${subpoena.witness.name_full()} - Subpoea Deposition Written Questions
  description: Subpoena for Deposition on Written Questions
  variable name: dwq_subpoena
  docx template file: docassemble.UsTxFamilyLaw:dwq_subpoena_depo_written_questions.docx
  valid formats:
    - docx
    - pdf
---
attachment:
  name: Deposition on Written Questions
  filename: ${subpoena.witness.name_full()} - Deposition Written Questions
  description: Deposition on Written Questions
  variable name: dwq_deposition
  docx template file: docassemble.UsTxFamilyLaw:dwq_deposition_questions.docx
  valid formats:
    - docx
    - pdf
---
event: review_screen
question: |
  Review and Edit Your Answers
review:
  - raw html: |
      ${ start_accordion("Update to Reuse Subpoena", showing=True) }
  - Edit: subpoena.witness.name.first
    button: |
      Witness: ${subpoena.witness}
  - Edit: subpoena.witness.registered_agent.name.first
    button: |
      Registered agent: ${subpoena.witness.registered_agent}
  - Edit: subpoena.secure_link
    button: |
      Secure link: ${subpoena.secure_link}
  - Edit: subpoena.notice_usps_item_number
    button: |
      Certified Mail #: ${subpoena.notice_usps_item_number}
  - raw html: |
      ${ end_accordion() }

  - raw html: |
      ${ start_accordion("Case Details") }
  - Edit: case.id
    button: |
      Cause # ${case.id} in ${case.county}, Texas

  - raw html: |
      ${ next_accordion("Attorney's and Parties")}
  - Edit: case.attorney.name.first
    button: |
      Attorney issuing subpoena: ${ case.attorney }
  - Edit: subpoena.paralegal.name.first
    button: |
      Paralegal managing subpoena: ${subpoena.paralegal}
  - Edit: case.petitioner.ssn_last4
    button: |
      Petitioner: ${ case.petitioner }
  - Edit: case.respondent.ssn_last4
    button: |
      Respondent: ${ case.respondent }
  - Edit: case.client
    button: |
      Our client: ${ case.client }
  - Edit: case.oc.name.first
    button: |
      Opposing council: ${ case.oc }

  - raw html: |
      ${ next_accordion("Subponea Details ")}
  - Edit: subpoena.subpoena_type
    button: |
      Subpoena type: ${ subpoena.subpoena_type }
  - Edit: subpoena.document_subject
    button: |
      Subpoena document subject: ${subpoena.document_subject}
  - Edit: subpoena.bank_flag
    button: |
      CPS and Bank Flags (CPS: ${subpoena.cps_flag} // Bank: ${subpoena.bank_flag})
  - Edit: subpoena.notice_date
    button: |
      Notice date: ${ subpoena.notice_date }
  - Edit: subpoena.issue_date
    button: |
      Issue/Due/Production From Dates: ${subpoena.issue_date}
  - Edit: review_documents
    button: |
      Review/Edit Exhibit A Document List

  - note: |
      #### Exhibit A Documents

      ${ document_table }

      ${ subpoena.documents.add_action("Add a document.")}
  - raw html: |
      ${ end_accordion() }
action buttons:
  - label: Rebuild subpoena
    action: force_refresh
    color: success
---
id: force the regeneration of all attachments
event: force_refresh
code: |
  for each_file in attachment_list:
    del each_file
  undefine('all_cover_letter')
  undefine('dwq_notice')
  undefine('all_bra')
  undefine('dwq_subpoena')
  undefine('dwq_deposition')
  undefine('sdt_notice')
  undefine('sdt_subpoena')
  reconsider('attachment_list')
  reconsider('case_saved')
  continue_subpoena
---
